@model TeamRedInternalProject.ViewModel.CreateTicketVM

@{
    ViewBag.Title = "Create";
}

<h2>Create New Ticket Type</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

        <div class="form-group">
        @Html.LabelFor(model => model.TicketType.Type, htmlAttributes: new { @class = "control-label col-md-3 h4 pt-3" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.TicketType.Type, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TicketType.Type, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
        @Html.LabelFor(model => model.TicketType.Price, htmlAttributes: new { @class = "control-label col-md-3 h4 pt-3" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.TicketType.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TicketType.Price, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
        @Html.LabelFor(model => model.FestivalTicketType.FestivalId, "Festival", htmlAttributes: new { @class = "control-label col-md-3 h4 pt-3" })
            <div class="col-md-8">
                @Html.DropDownListFor(model => model.FestivalTicketType.FestivalId, new SelectList(Model.Festivals, "FestivalId", "Location"), "Select a festival", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.FestivalTicketType.FestivalId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
        @Html.LabelFor(model => model.FestivalTicketType.Quantity, htmlAttributes: new { @class = "control-label col-md-3 h4 pt-3" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.FestivalTicketType.Quantity, new { htmlAttributes = new { @class = "form-control" }})
            @Html.ValidationMessageFor(model => model.FestivalTicketType.Quantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-8 pt-3 pb-3">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
}

<div>
    @Html.ActionLink("Back to List", "Index", "Admin")
</div>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
