@using TeamRedInternalProject.ViewModel
@model TeamRedInternalProject.Utilities.PaginatedList<TicketVM>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>My Tickets</h1>
<form asp-action="Index" asp-controller="User" method="get">
    <div class="form-actions no-color">
        <p>
            <div class="form-group" style="display: inline-block">
                <span>Search on Name:</span>
                <input type="text" name="SearchString" required />
            </div>
            <div class="form-group" style="display: inline-block">
                <input type="submit" value="Search" class="btn btn-primary" />
            </div>
            <a asp-action="Index" asp-controller="User" id="backToList">Back to Full List</a>
        </p>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                TicketId
            </th>
            <th>
                Ticket Type
            </th>
            <th>
                Price
            </th>
            <th>
                Location
            </th>
            <th>
                Date
            </th>
            <th>
                First Name
            </th>
            <th>
                LastName
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.TicketId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TicketType)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Location)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Date)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                <a asp-action="DownloadTicket" asp-route-ticketId="@item.TicketId">Download As PDF</a>
            </td>
        </tr>
}
    </tbody>
</table>

 
<div style="display: @(Model.Count() == 0 ? "block" : "none");">
    <p>Looks like you don't have any tickets yet ... </p>
</div>



@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}
<a asp-action="Index"
   asp-controller="User"
   asp-route-page="@(Model.PageIndex - 1)"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-controller="User"
   asp-route-page="@(Model.PageIndex + 1)"
   class="btn btn-default @nextDisabled">
    Next
</a>
<a asp-action="PurchaseTickets">Purchase Tickets Now</a>
@ViewBag.Message
