@model IEnumerable<TeamRedInternalProject.ViewModel.TicketOptionVM>

@{
    ViewData["Title"] = "PurchaseTickets";
}

<h1>Buy Tickets</h1>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.TicketType.Type)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TicketType.Price)
            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.QtyRemaining)*@
                Status
            </th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.TicketType.Type)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TicketType.Price)
            </td>
            <td>
                @(item.QtyRemaining != 0 ? "Available" : "SOLD OUT!")
            </td>
            @if (User.Identity.IsAuthenticated)
            {
                    <td>
                        <input type="button" value="Add To Cart" id="@item.Id-add" data-type="@item.TicketType.Type" data-price="@item.TicketType.Price" onclick=updateShoppingCart(event)>
                        <input type="button" value="Remove To Cart" id="@item.Id-remove" data-type="@item.TicketType.Type" data-price="@item.TicketType.Price" onclick=updateShoppingCart(event)>
                        <span>Quantity:</span>
                        <span id="@item.Id-quantity" class="quantity">0</span>
                        <span>Amount: </span>
                        <span id="@item.Id-amount" class="amount">0</span>
                    </td>
            }
        </tr>
}
    </tbody>
</table>

@if (User.Identity.IsAuthenticated)
{
    <div>
        <p id="totalItems">0</p>
    </div>
    <div>
        <h3>Total:</h3>
        $<span id="totalAmount" class="totalAmount">0</span>
    </div>
    <br />

    <div id="paypal-button"></div>
    <script src="https://www.paypalobjects.com/api/checkout.js"></script>
}

@if (!User.Identity.IsAuthenticated)
{
    <button>
        <a class="nav-link text-dark" href="/Identity/Account/Login">Login</a>
    </button>
}



<script>
    const ticketRequests = [];

    function updateShoppingCart(event) {
        var clickedId = event.target.id; 
        var elementIdSplit = clickedId.split('-');
        var id = elementIdSplit[0]; // id of the TicketOptionVM item
        var action = elementIdSplit[1]; // add or remove
        var ticketType = event.target.dataset.type;
        var ticketPrice = event.target.dataset.price;
        ChangeCart(id, action, ticketPrice, ticketType)
    }

    function ChangeCart(id, action, ticketPrice, ticketType) {
        var cartQtyId = "#" + id + "-quantity";
        var cartAmtId = "#" + id + "-amount";

        var quantity = $(cartQtyId).html();

        if (action == "add") {
            quantity++;
        } else {
            quantity--;
            if (quantity < 0) {
                quantity = 0;
            }
        }

        const ticketRequestIndexOfCurrentType = ticketRequests.findIndex(request => request.ticketType === ticketType);

        if(ticketRequestIndexOfCurrentType === -1) {
            ticketRequests.push({
                ticketType,
                quantity
            })
        } else {
            ticketRequests[ticketRequestIndexOfCurrentType].quantity = quantity;
        }

        $(cartQtyId).text(quantity);

        //Calculate new amount
        const quantityNum = quantity * 1;
        const ticketPriceNum = ticketPrice * 1;
        var newAmount = (ticketPriceNum * quantityNum).toFixed(2);

        $(cartAmtId).text(newAmount);

        var totalItemsId = "#totalItems";
        var totalAmountId = "#totalAmount";

        //Calculate totals
        var totalQuantity = 0;
        $('.quantity').each(function () {
            var thisQuantity = $(this).html();
            totalQuantity += parseInt(thisQuantity);
        });
        var totalAmount = 0.00;
        $('.amount').each(function () {
            var thisAmount = $(this).html();
            totalAmount += parseFloat(thisAmount);
        });

        $("#totalItems").text(totalQuantity);
        $("#totalAmount").text(totalAmount.toFixed(2));
    }

    paypal.Button.render({
        env: 'sandbox',
        style: {
            size: 'small',
            color: 'gold',
            shape: 'pill',
            label: 'checkout'
        },
        client: {
            // You need to change this to your client ID
            sandbox: 'AY6FwsqKZKOJ2wSYZM6Idv2oinvnUMKMepprrSKvg_JpwRo_r2PkuTp0O5yBpNM2uZqWc6UUnHXUho3W',
            // production: '3W8F5EEJKUJP4KSY'  // Switch to ‘production’ when live.
        },

        commit: true,

        payment: function (data, actions) {
            return actions.payment.create({
                payment: {
                    transactions: [{

                        custom: 'Custom data goes here!',
                        amount: {
                            total:
                                document.getElementById("totalAmount").innerHTML
                            , currency:
                                'CAD'
                        }
                    }]
                }
            });
        },

        onAuthorize: function (data, actions) {
            return actions.payment.execute().then(function (payment) {
                console.log("This is what comes back from Paypal: ")
                console.log(payment);
                //alert("This JSON is from Paypal: " + JSON.stringify(payment));
                console.log("-------------------------------------");
                var ticketRequest1 = {
                    "purchaseDetails": {
                        "PayerEmail":"payment.payer.payer_info.email",
                        "TicketRequests": "ticketRequests" }
                };

                var ticketRequest2 = {
                    "purchaseDetails": {
                        "PayerEmail":"payment.payer.payer_info.email",
                        "TicketRequests": ticketRequests }
                };
                //console.log(JSON.stringify(ticketRequest));
                console.log("-------------^^^^^^^------------------");

                console.log("ticketRequest1: " + JSON.stringify(ticketRequest1));
                console.log("ticketRequest2: " + JSON.stringify(ticketRequest2));
                console.log("dataObject: " + JSON.stringify(dataObject));


                var dataObject = {
                    //"cart": payment.cart,
                    //"intent": payment.intent,
                    //"paymentID": payment.id,
                    //"create_time": payment.create_time,
                    //"paymentState": payment.state,
                    //"PayerEmail": payment.payer.payer_info.email,
                    "purchaseDetails": {
                        "PayerEmail":payment.payer.payer_info.email,
                        "TicketRequests": ticketRequest1
                    },
                    //"payerID": payment.payer.payer_info.payer_id,
                    //"payerFirstName": payment.payer.payer_info.first_name,
                    //"payerLastName": payment.payer.payer_info.last_name,
                    //"payerMiddleName": payment.payer.payer_info.middle_name,
                    //"payerCountryCode": payment.payer.payer_info.country_code,
                    //"paymentMethod": payment.payer.payment_method,
                    //"payerStatus": payment.payer.status,
                    //"amount": payment.transactions[0].amount.total,
                    //"currency": payment.transactions[0].amount.currency,
                    //"custom": payment.transactions[0].custom,
                    //"TicketRequests": "ticketRequests",
                }

                console.log(dataObject)
                $.ajax({
                    type: "post",
                    url: "/User/PaySuccess",
                    data: "dataObject",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",

                    success: function (msg) {
                        console.log("<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>");
                        console.log("ticketRequests: " + JSON.stringify(ticketRequests));
                        console.log("dataObject: " + JSON.stringify(dataObject));
                        window.location.href
                            = "/Home/Confirmation?confirmationId=" + data.paymentID;
                    },

                    error: function (msg) {
                        console.log("fail: " + JSON.stringify(msg));
                        //alert("fail: " + JSON.stringify(msg));
                    }
                });
            })
        },

        onCancel: function (data, actions) {
        },
    }, '#paypal-button');
</script>
