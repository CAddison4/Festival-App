@using TeamRedInternalProject.ViewModel
@model TeamRedInternalProject.Utilities.PaginatedList<TicketVM>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>My Tickets</h1>

<form asp-action="MyTickets" asp-controller="Ticket" method="get">
    <div class="form-actions no-color">
        <p>
            <div class="form-group" style="display: inline-block">
                <span>Search on Name:</span>
                <input type="text" name="SearchString" required />
            </div>
            <div class="form-group" style="display: inline-block">
                <input type="submit" value="Search" class="btn btn-primary" />
            </div>
            <a asp-action="MyTickets" asp-controller="Ticket" id="backToList">Back to Full List</a>
        </p>
    </div>
</form>
<div class="d-flex justify-content-center p-4 pb-3 mb-0">
    <h3>Click ticket to download</h3>
</div>


<table class="table">
    <thead>
        <tr>
            <th>
                TicketId
            </th>
            <th>
                Ticket Type
            </th>
            <th>
                Price
            </th>
            <th>
                Location
            </th>
            <th>
                Date
            </th>
            <th>
                Name
            </th>

            <th></th>
        </tr>
    </thead>
    <tbody style="border:transparent">
@foreach (var item in Model) {
            <tr style="border:transparent">
            <td>
                @Html.DisplayFor(modelItem => item.TicketId)
            </td>
            <td>
                    <a asp-action="DownloadTicket" class="download-tickets" asp-route-ticketId="@item.TicketId">@Html.DisplayFor(modelItem => item.TicketType)</a>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Location)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Date)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
@*
            <td>
                <a asp-action="DownloadTicket" asp-route-ticketId="@item.TicketId">Download As PDF</a>
            </td>*@
        </tr>
}
    </tbody>
</table>

 
<div style="display: @(Model.Count() == 0 ? "block" : "none");">
    <p>Looks like you don't have any tickets yet ... </p>
</div>



@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="MyTickets"
   asp-controller="Ticket"
   asp-route-page="@(Model.PageIndex - 1)"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="MyTickets"
   asp-controller="Ticket"
   asp-route-page="@(Model.PageIndex + 1)"
   class="btn btn-default @nextDisabled">
    Next
</a>
<div class="d-flex justify-content-center">
    <a type="button" class="nav-link btn btn-primary btn-hover" asp-action="PurchaseTickets">Purchase Tickets Now</a>
</div>


@ViewBag.Message

<style>
    .download-tickets {
        color: black;
    }

    .download-tickets:hover{
/*    background-color: orangered;*/
    color: orangered;
    text-shadow: 0px 2px 4px #b5739d;
/*    border: 1px solid orangered;*/
/*    box-shadow: 0px 2px 4px #b5739d;*/
    }
    .btn-hover:hover {
    background-color: orangered;
    color: white;
/*    text-shadow: 0px 2px 4px #b5739d;*/
    border: 1px solid orangered;
    box-shadow: 0px 2px 4px #b5739d;
}

.btn-hover {
        background-color: rgba(255, 255, 255, 0.5);
        color: orangered;
    
    border: 1px solid white;
    /*transition: background-color 0.25s, color 0.25s, text-shadow 0.25s;*/
    margin-bottom: 20px;
    width: 200px;
}
</style>