@model IEnumerable<TeamRedInternalProject.ViewModel.TicketOptionVM>

@{
    ViewData["Title"] = "PurchaseTickets";
}

<h1>Buy Tickets</h1>

<table class="table pl-3">
    <thead >
        <tr >
            <th class="px-3">
                @Html.DisplayNameFor(model => model.TicketType.Type)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TicketType.Price)
            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.QtyRemaining)*@
                Status
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody style="border:transparent">
        @foreach (var item in Model) {
            <tr class="">
                <td class="px-3">
                    @Html.DisplayFor(modelItem => item.TicketType.Type)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TicketType.Price)
                </td>
                <td>
                    @(
                    item.QtyAvailable != 0 ? "Available" : "SOLD OUT!"
                            )
                </td>
                @if (User.Identity != null && User.Identity.IsAuthenticated)
                {
                    <td>
                        <input 
                            type="button" 
                            value="Add To Cart" 
                            id="@item.Id-add" 
                            data-type="@item.TicketType.Type" 
                            data-price="@item.TicketType.Price"
                            data-qty="@item.QtyAvailable"
                            onclick=updateShoppingCart(event)

                        >
                        <input 
                            type="button" 
                            value="Remove From Cart" 
                            id="@item.Id-remove" 
                            data-type="@item.TicketType.Type" 
                            data-price="@item.TicketType.Price" 
                            data-qty="@item.QtyAvailable"
                            onclick=updateShoppingCart(event)
                        >
                        <span>Quantity:</span>
                        <span id="@item.Id-quantity" class="quantity">0</span>
                        <span>Amount: </span>
                        <span id="@item.Id-amount" class="amount">0.00</span>
                    </td>

                }
            </tr>
        }
    </tbody>
</table>
@if (User.Identity != null && User.Identity.IsAuthenticated)
{
    <div class="container mb-4">
        <div class="row">
            <div class="col-md-6">
                <div class="card bg-transparent">
                    <div class="card-body d-flex align-items-center justify-content-between">
                        <h3 class="card-title mb-0">Tickets:</h3>
                        <h3 class="card-text mb-0" id="totalItems">0</h3>
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="card bg-transparent">
                    <div class="card-body d-flex align-items-center justify-content-between">
                        <h3 class="card-title mb-0">Total:</h3>
                        <span class="card-text d-flex align-items-center"><h3 class="mb-0">$</h3><h3 id="totalAmount" class="totalAmount mb-0">0.00</h3></span>
                    </div>
                </div>
            </div>
        </div>
    </div>
@*    <div class="container">
        <div class="col">
            <h3>Total Tickets:</h3>
            <p id="totalItems">0</p>
        </div>
    </div>

    <div>
        <h3>Total:</h3>
        $<span id="totalAmount" class="totalAmount">0.00</span>
    </div>
    <br />*@

    <div id="paypal-button"></div>
    <script src="https://www.paypalobjects.com/api/checkout.js"></script>
}


@if (User.Identity == null || !User.Identity.IsAuthenticated)
{
    <button>
        <a class="nav-link text-dark" href="/Identity/Account/Login">Login to Purchase</a>
    </button>
}

<script src="~/js/site.js"></script>
